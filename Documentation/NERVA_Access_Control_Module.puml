@startuml NERVA_Access_Control_Module
!define NERVA_ACCESS_CONTROL

title NERVA - Modulo de Controle de Acesso

' ===== PACKAGE STRUCTURE =====
package "Domain.Common" {
    abstract class BaseEntity
    {
        + Id : GUID <<get>> <<set>>
        + DomainEvents : IReadOnlyCollection<BaseEvent> <<get>> <<set>>
        void AddDomainEvent(BaseEvent event) <<add>>
        void RemoveDomainEvent(BaseEvent event) <<remove>>
        void ClearDomainEvents() <<clear>>
    }

    abstract class BaseAuditableEntity 
    {
        + CreatedBy : string <<get>> <<set>>
        + CreatedDate : DateTime <<get>> <<set>>
        + LastModifiedBy : string? <<get>> <<set>>
        + LastModifiedDate : DateTime? <<get>> <<set>>
    }

    abstract class BaseEvent
    {

    }

    interface INotification
    {

    }

    BaseEntity o-- BaseAuditableEntity : "inherits"
    BaseEvent <|-- INotification : "implements"
    BaseEntity o-- BaseEvent : "raises"
}

package "Domain.AccessControl" {
    class AccessRole 
    {
        + Name : string <<get>> <<set>>
        + Description : string? <<get>> <<set>>
        + IsActive : bool <<get>> <<set>> = true
    }

    class Function
    {
        + Name : string <<get>> <<set>>
        + Description : string? <<get>> <<set>>
    }

    class Localization
    {
        + Locale : string <<get>> <<set>>
        + IpAddress : string <<get>> <<set>>
    
    
    class Permission 
    {
        + Description : string <<get>> <<set>>
    }

    class RolePermission 
    {
        + RoleId : GUID <<get>> <<set>>
        + PermissionsId : GUID <<get>> <<set>>
        + Permissions : Permissions <<get>> <<set>>     
        + IsActive : bool <<get>> <<set>> = true
        + AccessRole : Role <<get>> <<set>>
    }

    class AccessLog 
    {
        + EmployeeId : int <<get>> <<set>>
        + Employee : Employee <<get>> <<set>>
        + Resource : string <<get>> <<set>>
        + Action : string <<get>> <<set>>
        + IsSuccess : bool <<get>> <<set>>
        + IpAddress : string? <<get>> <<set>>
        + TimeStamp : DateTimeOffset <<get>> <<set>>
    }
}

' ===== INHERITANCE RELATIONSHIPS =====
BaseEntity <|-- AccessRole
BaseAuditableEntity <|-- Permission
BaseAuditableEntity <|-- RolePermission
BaseAuditableEntity <|-- EmployeeRole
BaseAuditableEntity <|-- AccessLog

' ===== DOMAIN RELATIONSHIPS =====
AccessRole ||--o{ RolePermission : "has"
Permission ||--o{ RolePermission : "granted to"
AccessRole ||--o{ EmployeeRole : "assigned to"
EmployeeRole ||--o{ AccessLog : "generates"


@enduml